//Automatically generated code
using HFSM;
[StateMachineController(ControllerName = "PlayerMovementController")]
public partial class PlayerMovementController : StateMachineScriptController
{
	public override StateMachine ConstructStateMachine()
	{
		StateMachineHandler.BeginStateMachine(this, "Root")
            			.AddService<ProcessInputService>(ServiceType.Update,0)
			.AddService<CheckGetHitService>(ServiceType.FixedUpdate,0)
			.AddStateMachine("normal", true)
			.AddService<ProcessTalkService>(ServiceType.Update,0)
			.AddState<Normal_idleState>("normal_idle", true)
			.AddState<Normal_walkState>("normal_walk", false)
			.AddTemporaryState<Normal_talkState>("normal_talk")
			.SwitchHandle("normal_idle").ToState("normal_walk",false)
			.BoolCondition("IsWalk",true)
			.SwitchHandle("normal_walk").ToState("normal_idle",false)
			.BoolCondition("IsIdle",true)
			.SwitchHandle("Any").ToState("normal_talk",true)
			.TriggerCondition("Talk")
			.FinishHandle()
			.AddStateMachine("battle", false)
			.AddService<ProcessRollOrDodgeService>(ServiceType.Update,0)
			.AddService<ProcessAttackService>(ServiceType.Update,0)
			.AddStateMachine("battle_look_to_target", false)
			.AddService<FaceToTargetService>(ServiceType.Update,0)
			.AddState<Look_to_target_idleState>("look_to_target_idle", true)
			.AddState<Look_to_target_walkState>("look_to_target_walk", false)
			.AddState<DodgeState>("dodge", false)
			.SwitchHandle("dodge").ToState("look_to_target_idle",false)
			.SwitchHandle("look_to_target_idle").ToState("look_to_target_walk",false)
			.BoolCondition("IsWalk",true)
			.SwitchHandle("look_to_target_walk").ToState("look_to_target_idle",false)
			.BoolCondition("IsIdle",true)
			.SwitchHandle("look_to_target_walk").ToState("dodge",false)
			.TriggerCondition("RollOrDodge")
			.FinishHandle()
			.AddStateMachine("battle_free_view", true)
			.AddState<Free_view_idleState>("free_view_idle", true)
			.AddState<Free_view_runState>("free_view_run", false)
			.AddState<RollState>("roll", false)
			.AddState<Free_view_sprintState>("free_view_sprint", false)
			.SwitchHandle("free_view_idle").ToState("free_view_run",false)
			.BoolCondition("IsWalk",true)
			.SwitchHandle("free_view_idle").ToState("roll",false)
			.TriggerCondition("RollOrDodge")
			.SwitchHandle("free_view_run").ToState("roll",false)
			.TriggerCondition("RollOrDodge")
			.SwitchHandle("roll").ToState("free_view_idle",false)
			.SwitchHandle("free_view_run").ToState("free_view_idle",false)
			.BoolCondition("IsIdle",true)
			.SwitchHandle("free_view_run").ToState("free_view_sprint",false)
			.BoolCondition("IsRun",true)
			.SwitchHandle("free_view_sprint").ToState("roll",false)
			.TriggerCondition("RollOrDodge")
			.SwitchHandle("free_view_sprint").ToState("free_view_run",false)
			.BoolCondition("IsWalk",true)
			.BoolCondition("IsRun",false)
			.SwitchHandle("free_view_sprint").ToState("free_view_idle",false)
			.BoolCondition("IsIdle",true)
			.SwitchHandle("free_view_idle").ToState("free_view_sprint",false)
			.BoolCondition("IsWalk",true)
			.BoolCondition("IsRun",true)
			.FinishHandle()
			.AddTemporaryState<AttackState>("attack")
			.SwitchHandle("battle_look_to_target").ToStateMachine("battle_free_view")
			.BoolCondition("IsLookToTarget",false)
			.SwitchHandle("battle_free_view").ToStateMachine("battle_look_to_target")
			.BoolCondition("IsLookToTarget",true)
			.SwitchHandle("Any").ToState("attack",true)
			.TriggerCondition("Attack")
			.FinishHandle()
			.AddTemporaryState<Get_hitState>("get_hit")
			.SwitchHandle("normal").ToStateMachine("battle")
			.BoolCondition("IsOnBattle",true)
			.SwitchHandle("Any").ToState("get_hit",true)
			.TriggerCondition("GetHit")
			.SwitchHandle("battle").ToStateMachine("normal")
			.BoolCondition("IsOnBattle",false)
			.FinishHandle()

			.EndHandle();
		return StateMachineHandler.EndStateMachine();
	}
}